version: 2
jobs:
  build:
    working_directory: /go/src/github.com/tufin/orca-operator
    docker:
      - image: tufinim/circleci-go:master
    environment:
      RELEASE: 0.1
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Generate code & CSV from orca_types.go
          command: |
            operator-sdk generate k8s
            operator-sdk olm-catalog gen-csv --update-crds --from-version ${RELEASE}.0 --csv-version ${RELEASE}.${CIRCLE_BUILD_NUM}
#            TODO: create a pull request with the Operator catalog data only in the upstream-community-operators subdirectory
      - run:
          name: Build operator
          command: |
            operator-sdk build tufin/orca-operator:latest --image-build-args "--build-arg version=${CIRCLE_BUILD_NUM} --build-arg release=${RELEASE}"
#            for v0.7.0+
#            operator-sdk build tufin/orca-operator:latest --docker-build-args "--build-arg version=${CIRCLE_BUILD_NUM} --build-arg release=${RELEASE}"
      - run:
          name: Validate artifacts
          command: |
            BUNDLE_VER=${RELEASE}.${CIRCLE_BUILD_NUM}
            BUNDLE_DIR=deploy/olm-catalog/orca-operator
            # create a dummy container which will hold a volume with config
            docker create -v /artifacts --name configs alpine:3.4 /bin/true

            # inject version
            sed "s/#VERSION#/${BUNDLE_VER}/g" deploy/olm-catalog/orca-operator.package.tmp.yaml > orca-operator.package.yaml

            # copy artifact files into this volume
            docker cp orca-operator.package.yaml configs:/artifacts
            docker cp ${BUNDLE_DIR}/${BUNDLE_VER}/ configs:/artifacts

            docker run --volumes-from configs tufin/operator-courier operator-courier --verbose verify /artifacts
            docker run --volumes-from configs tufin/operator-courier operator-courier --verbose verify --ui_validate_io /artifacts

            # create bundle artifacts archive
            cp orca-operator.package.yaml ${BUNDLE_DIR}/orca-operator.package.yaml
            zip -jr ${BUNDLE_DIR}/orca-operator-v${BUNDLE_VER}.zip ${BUNDLE_DIR}/*
      - store_artifacts:
          path: deploy/olm-catalog/orca-operator
      - run:
          name: Push to dockerhub
          command: |
            if [[ $(git log -1 --pretty=%B) == *"[push docker]"* ]]; then
              TUFIN_PUBLISH_DOCKERHUB="true"
            fi

            if [[ "$TUFIN_PUBLISH_DOCKERHUB" != "true" ]]; then
              echo "Not pushing to docker-hub"
              exit 0
            fi

            echo ${DOCKER_PASS} | docker login -u ${DOCKER_USER} --password-stdin
            docker tag tufin/orca-operator:latest tufin/orca-operator:${RELEASE}.${CIRCLE_BUILD_NUM}
            docker push tufin/orca-operator:${RELEASE}.${CIRCLE_BUILD_NUM}
            docker push tufin/orca-operator:latest
      - run:
          name: Push to redhat registry
          command: |
            if [[ $(git log -1 --pretty=%B) == *"[push redhat]"* ]]; then
              TUFIN_PUBLISH_REDHAT="true"
            fi

            if [[ "$TUFIN_PUBLISH_REDHAT" != "true" ]]; then
              echo "Not pushing to red-hat (OLM)"
              exit 0
            fi

            echo ${REDHAT_PASS} | docker login -u unused scan.connect.redhat.com --password-stdin
            docker tag tufin/orca-operator:latest scan.connect.redhat.com/ospid-bd3f08ed-337c-4f15-8905-421a0d26ea07/orca-operator:${RELEASE}.${CIRCLE_BUILD_NUM}
            docker push scan.connect.redhat.com/ospid-bd3f08ed-337c-4f15-8905-421a0d26ea07/orca-operator:${RELEASE}.${CIRCLE_BUILD_NUM}

workflows:
  version: 2
  main:
    jobs:
    - build:
        filters:
          branches:
            only: master
